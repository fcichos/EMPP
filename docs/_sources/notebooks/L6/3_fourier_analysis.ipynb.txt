{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Fourier Analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "[File as PDF](https://github.com/fcichos/EMPP/blob/d1d5e42c734210f6f28c3f9ce13c4b2b2fa1df0c/source/notebooks/L6/3_fourier_analysis.pdf)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Fourier analysis or the description of functions as s sereies of sine and cosine function could be a very useful tool in the numerical analysis of data as well as in the numerical solution of differential equations. If you look through experiments, fourier transforms are frequently employed. \n",
    "\n",
    "* optical tweezers are often characterized by the frequency spectrum of positional fluctuations\n",
    "* Lock-In detection works by doing a Fourier analysis for a very special frequency of signals\n",
    "* Optics can be understood in terms of Fourier transforms\n",
    "\n",
    "There is a whole bunch of additional fields where the Fourier transform and analysis is important. We are going to have a quick look at Fourier Series and Fourier transforms from a mathematical point of view. We will apply that to analyze the frequency spectrum of the oscillations of our coupled pendula. Later, we will come back to that when we simulate the motion of a Gaussian wavepacket for quantum mechanics."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "<style>\n",
       ".output_png {\n",
       "    display: table-cell;\n",
       "    text-align: center;\n",
       "    vertical-align: middle;\n",
       "}\n",
       "</style>\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "from scipy.integrate import odeint\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib import animation\n",
    "\n",
    "%matplotlib inline\n",
    "%config InlineBackend.figure_format = 'retina'\n",
    "\n",
    "# default values for plotting\n",
    "plt.rcParams.update({'font.size': 12,\n",
    "                     'axes.titlesize': 18,\n",
    "                     'axes.labelsize': 16,\n",
    "                     'axes.labelpad': 14,\n",
    "                     'lines.linewidth': 1,\n",
    "                     'lines.markersize': 10,\n",
    "                     'xtick.labelsize' : 16,\n",
    "                     'ytick.labelsize' : 16,\n",
    "                     'xtick.top' : True,\n",
    "                     'xtick.direction' : 'in',\n",
    "                     'ytick.right' : True,\n",
    "                     'ytick.direction' : 'in',}) \n",
    "\n",
    "# center the plots\n",
    "from IPython.core.display import HTML\n",
    "HTML(\"\"\"\n",
    "<style>\n",
    ".output_png {\n",
    "    display: table-cell;\n",
    "    text-align: center;\n",
    "    vertical-align: middle;\n",
    "}\n",
    "</style>\n",
    "\"\"\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Fourier series\n",
    "A Fourier series is a representation of periodic function $f(t)$ of period $2\\pi$ or more general as described below on an arbitrary interval $T$ regarding sine and cosine functions\n",
    "\n",
    "\\begin{equation}\n",
    "f(t)=\\frac{A_{0}}{2}+\\sum_{k=1}^{\\infty}\\left ( A_{k}\\cos\\left (\\omega_k t\\right) + B_{k}\\sin\\left (\\omega_k t\\right)\\right )\n",
    "\\end{equation}\n",
    "\n",
    "where $\\omega_k=\\frac{2\\pi k}{T}$.  $T$ represents the period of the cosine and sine functions. Their amplitude is defined by the coefficients $A_k$ and $B_k$. The term $A_0$ is a constant offset added to the oscillating sine and consine functions. Equation \\ref{eq:fourier_sum} therefore represents an arbitrary periodic function $f(t)$ on an interval T as a sum of oscillating sine and cosine functions of discrete frequencies ($\\omega_k$)\n",
    " \n",
    "\\begin{equation*}\n",
    "\\omega_k= 0, \\frac{2\\pi}{T}, \\frac{4\\pi}{T}, \\frac{6\\pi}{T}, ... , \\frac{n\\pi}{T}\n",
    "\\end{equation*}\n",
    "\n",
    "and varying amplitudes. The cosine and sine functions in the sum (Eq.  \\ref{eq:fourier_sum}) can be shown to be orthogonal by using the trigonometric identity \n",
    "\n",
    "\\begin{equation}\n",
    "\\sin(\\omega_{i} t)\\sin(\\omega_{k}t )=\\frac{1}{2}\\lbrace\\cos((\\omega_{i}-\\omega_{k})t)- \\cos((\\omega_{i}+\\omega_{k})t\\rbrace\n",
    "\\end{equation}\n",
    "\n",
    "Therefore the integral \n",
    "\n",
    "\\begin{equation}\n",
    "\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}}  \\sin(\\omega_{i}t)\\sin (\\omega_k t) dt\t\n",
    "\\end{equation}\n",
    "\n",
    "can be split into two integrals over a cosine function with the sum $(\\omega_{1}+\\omega_{2})$ and the difference frequency $(\\omega_{1}-\\omega_{2})$. As the integration results in a sine function and has to be evaluated at $T/2$ and $-T/2$ with $\\omega_k=k 2\\pi/T$, $(k \\in \\mathbb{Z}^+ )$, the integral results in \n",
    "\n",
    "\\begin{equation}\n",
    "\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}}  \\sin(\\omega_{i}t)\\sin (\\omega_k t) dt  =\\begin{cases}\n",
    "0 &\\text{for }  i\\neq k, \\\\\n",
    "T/2 &\\text{for }  i=k\n",
    "\\end{cases}\n",
    "\\end{equation}\n",
    "\n",
    "Equivalently, the same can be carried out for the cosine functions, which yields\n",
    "\n",
    "\\begin{equation}\n",
    "\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}}  \\cos(\\omega_{i}t)\\cos (\\omega_k t) dt  =\\begin{cases}\n",
    "0 &\\text{for }  i\\neq k, \\\\\n",
    "T/2 &\\text{for }  i=k\n",
    "\\end{cases} \n",
    "\\end{equation}\n",
    "\n",
    "As mentioned above the coefficients $A_k$ and $B_k$ are determined by the projections of the function $f(t)$ onto the basis functions as displayed in Eq.\\ref{A_k}-\\ref{B_k}. \n",
    "\n",
    "\n",
    "\\begin{align}\n",
    "\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}} & \\cos (\\omega_k t) dt  =\\begin{cases}\n",
    "0 &\\text{for }  k\\neq0, \\\\\n",
    "T &\\text{for }  k=0\n",
    "\\end{cases} \\\\\n",
    "\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}} & \\sin(\\omega_k t) dt=0  \\text{ for all }k \n",
    "\\end{align}\n",
    "\n",
    "\\begin{equation}\n",
    "A_k=\\frac{2}{T}\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}} f(t)\\cos(\\omega_k t) dt  \\text{ for } k \\neq 0\n",
    "\\end{equation}\n",
    "\n",
    "and for $k=0$\n",
    "\n",
    "\\begin{equation}\n",
    "A_0= \\frac{1}{T}\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}} f(t) dt\n",
    "\\end{equation}\n",
    "\n",
    "In this case $\\frac{2}{T}$ and $\\frac{1}{T}$ are the mean values for the Equations. To get the coefficient $B_k$ I need to multiply $f(t)$ with $\\sin (\\omega_k t)$ and integrate it from $-\\frac{T}{2}$ to $+\\frac{T}{2}$. \n",
    "\n",
    "As a result of this, we obtain \n",
    "\n",
    "\\begin{equation}\n",
    "B_k=\\frac{2}{T}\\int\\limits_{-\\frac{T}{2}}^{+\\frac{T}{2}} f(t) \\sin(\\omega_k t) dt,\\,  \\forall k\n",
    "\\end{equation}\n",
    "\n"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "## Fourier transform\n",
    "\n",
    "The Fourier transform is a generalisation of the complex Fourier series to the representation of arbitrary non-periodic functions $f(t)$ by a continuous spectrum of complex functions $\\exp(i\\omega t)$. This transform is therefore also called continuous Fourier transform. The sum of individual sine and cosine functions with discrete frequencies $\\omega_{k}$ in the Fourier series is now replaced by an integral over the complex function $\\exp(i\\omega t)$ with arbitrary continuous values of the frequency $\\omega$. \n",
    "\n",
    "\n",
    "The Fourier transform of the function $f(t)$ is therefore defined by \n",
    "\n",
    "\\begin{equation}\n",
    "F(\\omega)=\\int\\limits_{-\\infty}^{+\\infty}f(t)e^{-i\\omega t}dt\n",
    "\\end{equation}\n",
    "\n",
    "with $F(\\omega)$ now representing the spectrum of frequencies contributing to the function $f(t)$. Similarly, the so called inverse Fourier transform of the spectrum $F(\\omega)$ yields the original function $f(t)$ again (Eq. \\ref{eq:inverse_FT}). \n",
    "\n",
    "\\begin{equation}\\label{eq:inverse_FT}\n",
    "f(t)=\\frac{1}{2\\pi}\\int\\limits_{-\\infty}^{+\\infty}F(\\omega)e^{+i\\omega t}dt\n",
    "\\end{equation}\n",
    "\n",
    "Note that the Fourier transform $F(\\omega)$ is a complex number, which gives you information on the phase and amplitude of the oscillations. Not all of the oscillations have to align in with the same phase. As compared to the last lecture, we may get the phase of the oscillation at a frequency $\\omega$ by\n",
    "\n",
    "\\begin{equation}\n",
    "\\phi=\\tan^{-1}\\left(\\frac{Im(F(\\omega))}{Re(F(\\omega))}\\right)\n",
    "\\end{equation}\n",
    "\n",
    "and the amplitude at a frequency $\\omega$ by\n",
    "\n",
    "\\begin{equation}\n",
    "x_{0}^{\\rm theo}=|F(\\omega)|\n",
    "\\end{equation}\n",
    "\n",
    "There are a number of efficient numerical algorithms available, which simplify the Fourier transformation. These are called *Fast Fourier Transforms* and implemented in *numpy* for example. We will use these algorithms to calculate the numerical Fourier transforms of our signals to identify the different oscillations in our signal. \n",
    "Below is an example how the numpy function cab be used and how to obtain the proper frequency axis.\n",
    "\n",
    "~~~\n",
    "f=np.fft.fft(alpha)\n",
    "freq = np.fft.fftfreq(t.shape[-1],time/t.shape[-1])\n",
    "~~~\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Frequency analysis of our coupled pendula"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "To use the Fourier analysis we load the data of our previous simulation with the normal modes and the beat mode of the harmonic oscillator."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "nm1=np.loadtxt('nm1.txt',delimiter=',')\n",
    "nm2=np.loadtxt('nm2.txt',delimiter=',')\n",
    "beats=np.loadtxt('beats.txt',delimiter=',')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The follwing code extracts the data and sorts them into individual arrays for eaysier plotting."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "t=nm1[:,0]\n",
    "theta1_nm1=nm1[:,1]\n",
    "theta1_nm2=nm2[:,1]\n",
    "theta1_beats=beats[:,1]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The next few lines are mainly for plotting the data but contain also the Fourier transform of the signal."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "ExecuteTime": {
     "end_time": "2018-05-29T11:01:55.420585Z",
     "start_time": "2018-05-29T11:01:55.415985Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "ename": "NameError",
     "evalue": "name 'plt' is not defined",
     "output_type": "error",
     "traceback": [
      "\u001b[0;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)",
      "Cell \u001b[0;32mIn[1], line 2\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[38;5;66;03m# calculate the frequency spectrum of the oscillations for different initial conditions\u001b[39;00m\n\u001b[0;32m----> 2\u001b[0m \u001b[43mplt\u001b[49m\u001b[38;5;241m.\u001b[39mfigure(\u001b[38;5;241m1\u001b[39m,figsize\u001b[38;5;241m=\u001b[39m(\u001b[38;5;241m6\u001b[39m,\u001b[38;5;241m5\u001b[39m))\n\u001b[1;32m      3\u001b[0m plt\u001b[38;5;241m.\u001b[39mxlabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mfrequency [Hz]\u001b[39m\u001b[38;5;124m'\u001b[39m, fontsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m16\u001b[39m)\n\u001b[1;32m      4\u001b[0m plt\u001b[38;5;241m.\u001b[39mylabel(\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mAmplitude\u001b[39m\u001b[38;5;124m'\u001b[39m,fontsize\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m16\u001b[39m)\n",
      "\u001b[0;31mNameError\u001b[0m: name 'plt' is not defined"
     ]
    }
   ],
   "source": [
    "# calculate the frequency spectrum of the oscillations for different initial conditions\n",
    "plt.figure(1,figsize=(6,5))\n",
    "plt.xlabel('frequency [Hz]', fontsize=16)\n",
    "plt.ylabel('Amplitude',fontsize=16)\n",
    "plt.tick_params(labelsize=14)\n",
    "ft1=np.fft.fft(theta1_nm1)\n",
    "freq = np.fft.fftfreq(t.shape[-1],t[-1]/t.shape[-1])\n",
    "plt.plot(freq[:1000],np.abs(ft1)[:1000],label='normal mode 1')\n",
    "\n",
    "ft1=np.fft.fft(theta1_nm2)\n",
    "freq = np.fft.fftfreq(t.shape[-1],t[-1]/t.shape[-1])\n",
    "plt.plot(freq[:1000],np.abs(ft1)[:1000],label='normal mode 2')\n",
    "\n",
    "ft1=np.fft.fft(theta1_beats)\n",
    "freq = np.fft.fftfreq(t.shape[-1],t[-1]/t.shape[-1])\n",
    "plt.plot(freq[:1000],np.abs(ft1)[:1000],'k--',lw=1,label='beat mode')\n",
    "\n",
    "plt.legend()\n",
    "plt.xlim(0.2,0.4)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The result of our calculation is now, that the beat mode is actually a superposition of the two normal modes of the system. In fact, it turns out, that all of the possible states of a coupled oscillator system can be constructed from a superposition of its normal modes with specific amplitudes."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.16"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {},
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
