[{"id": "gpt_jupyterlab:plugin", "raw": "{}", "schema": {"jupyter.lab.shortcuts": [{"command": "@gpt_jupyterlab/plugin:run_gpt", "keys": ["Accel Space"], "selector": ".jp-Cell"}], "title": "gpt_jupyterlab", "description": "gpt_jupyterlab settings.", "type": "object", "jupyter.lab.menus": {"main": [{"id": "jp-mainmenu-edit", "items": [{"command": "@gpt_jupyterlab/plugin:run_gpt", "rank": 500}]}]}, "properties": {"openai_key": {"type": "string", "title": "Open AI API Key", "description": "Your Open AI key to run GPT-3.", "default": ""}, "code_model": {"type": "string", "title": "Code Model", "description": "Default model to use when running code.", "default": "code-davinci-002"}, "text_model": {"type": "string", "title": "Text Model", "description": "Default model to use when running on a piece of text.", "default": "text-davinci-003"}, "max_tokens": {"type": "integer", "title": "Max Tokens", "description": "The maximum number of tokens to generate in the completion.  The token count of your prompt plus max_tokens cannot exceed the model's context length. Most models have a context length of 2048 tokens (except for the newest models, which support 4096). (From OpenAI Documentation)", "default": 256}, "temperature": {"type": "number", "title": "Temperature", "description": "What sampling temperature to use. Higher values means the model will take more risks. Try 0.9 for more creative applications, and 0 (argmax sampling) for ones with a well-defined answer.(From OpenAI Documentation)", "default": 0.7}, "presence_penalty": {"type": "number", "title": "Presence Penalty", "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.(From OpenAI Documentation)", "default": 0}, "frequency_penalty": {"type": "number", "title": "Frequency Penalty", "description": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.(From OpenAI Documentation)", "default": 0}}, "additionalProperties": false}, "settings": {}, "version": "0.1.4"}, {"id": "nbdime-jupyterlab:plugin", "raw": "{}", "schema": {"jupyter.lab.setting-icon-class": "jp-Icon-16 nbdime-icon fa fa-clock-o", "jupyter.lab.setting-icon-label": "Nbdime", "title": "Nbdime", "description": "Settings for the nbdime extension.", "properties": {"hideUnchanged": {"title": "Hide Unchanged Cells", "description": "Whether unchanged cells should be hidden by default.", "type": "boolean", "default": true}}, "additionalProperties": false, "type": "object"}, "settings": {}, "version": "2.1.0"}, {"id": "@jupyter-widgets/jupyterlab-manager:plugin", "raw": "{}", "schema": {"title": "Jupyter Widgets", "description": "Jupyter widgets settings.", "additionalProperties": false, "properties": {"saveState": {"type": "boolean", "title": "Save Jupyter widget state in notebooks", "description": "Automatically save Jupyter widget state when a notebook is saved.", "default": false}}, "type": "object"}, "settings": {}, "version": "5.0.5"}, {"id": "@jupyterlab/git:plugin", "raw": "{}", "schema": {"jupyter.lab.setting-icon": "git", "jupyter.lab.setting-icon-label": "Git", "title": "Git", "description": "jupyterlab-git settings.", "type": "object", "properties": {"blockWhileCommandExecutes": {"type": "boolean", "title": "Suspend user interaction until commands finish", "description": "Suspend JupyterLab user interaction until Git commands (e.g., commit, pull, reset, revert) finish executing. Setting this to true helps mitigate potential race conditions leading to data loss, conflicts, and a broken Git history. Unless running a slow network, UI suspension should not interfere with standard workflows. Setting this to false allows for actions to trigger multiple concurrent Git actions.", "default": true}, "cancelPullMergeConflict": {"type": "boolean", "title": "Cancel pull merge conflict", "description": "If true, when fetching and integrating changes from a remote repository, a conflicting merge is canceled and the working tree left untouched.", "default": false}, "disableBranchWithChanges": {"type": "boolean", "title": "Disable branch with changes", "description": "Disable all branch operations (new, switch) when there are changed/staged files", "default": false}, "displayStatus": {"type": "boolean", "title": "Display Git status updates", "description": "Display Git extension status updates in the JupyterLab status bar. If true, the extension displays status updates in the JupyterLab status bar, such as when pulling and pushing changes, switching branches, and polling for changes. Depending on the level of extension activity, some users may find the status updates distracting. In which case, setting this to false should reduce visual noise.", "default": true}, "doubleClickDiff": {"type": "boolean", "title": "Show diff on double click", "description": "If true, double clicking a file in the list of changed files will open a diff.", "default": false}, "historyCount": {"type": "integer", "title": "History count", "description": "Number of (most recent) commits shown in the history log", "default": 25}, "refreshIfHidden": {"type": "boolean", "title": "Refresh if the Git tab is hidden", "description": "Whether to check Git status when the Git tab is not visible. Choose `false` for higher performance.", "default": false}, "refreshInterval": {"type": "integer", "title": "Refresh interval", "description": "Number of milliseconds between polling the file system for changes.", "default": 3000}, "simpleStaging": {"type": "boolean", "title": "Simple staging flag", "description": "If true, use a simplified concept of staging. Only files with changes are shown (instead of showing staged/changed/untracked), and all files with changes will be automatically staged", "default": false}, "commitAndPush": {"type": "boolean", "title": "Trigger push on commit", "description": "Whether to trigger or not a push for each commit.", "default": false}, "openFilesBehindWarning": {"type": "boolean", "title": "Open files behind warning", "description": "If true, a popup dialog will be displayed if a user opens a file that is behind its remote branch version, or if an opened file has updates on the remote branch.", "default": true}}, "jupyter.lab.shortcuts": [{"command": "git:submit-commit", "keys": ["Accel Enter"], "selector": ".jp-git-CommitBox"}], "jupyter.lab.menus": {"main": [{"id": "jp-mainmenu-git", "label": "Git", "rank": 60, "items": [{"command": "git:init"}, {"command": "git:clone"}, {"command": "git:merge"}, {"command": "git:push"}, {"command": "git:push", "args": {"force": true}}, {"command": "git:pull"}, {"command": "git:pull", "args": {"force": true}}, {"command": "git:add-remote"}, {"command": "git:terminal-command"}, {"type": "separator"}, {"command": "git:toggle-simple-staging"}, {"command": "git:toggle-double-click-diff"}, {"type": "separator"}, {"command": "git:open-gitignore"}, {"type": "separator"}, {"type": "submenu", "submenu": {"id": "jp-mainmenu-git-help", "label": "Help", "items": [{"command": "git:open-url", "args": {"text": "Set Up Remotes", "url": "https://www.atlassian.com/git/tutorials/setting-up-a-repository"}}, {"command": "git:open-url", "args": {"text": "Git Documentation", "url": "https://git-scm.com/doc"}}]}}]}], "context": [{"type": "submenu", "selector": ".jp-DirListing-item[data-isdir=\"false\"]", "rank": 5, "submenu": {"id": "jp-contextmenu-git", "label": "Git", "icon": "git"}}]}}, "settings": {}, "version": "0.34.0"}, {"id": "@jupyterlab/latex:plugin", "raw": "{}", "schema": {"jupyter.lab.setting-icon-class": "jp-FileIcon", "jupyter.lab.setting-icon-label": "LaTeX", "title": "LaTeX", "description": "LaTeX settings.", "properties": {"synctex": {"type": "boolean", "title": "SyncTeX", "description": "Whether to use SyncTeX for linking document views", "default": true}}, "additionalProperties": false, "type": "object"}, "settings": {}, "version": "3.1.0"}, {"id": "@jupyter-ai/core:plugin", "raw": "{}", "schema": {"$schema": "http://json-schema.org/draft-07/schema", "title": "Generative AI", "description": "JupyterLab generative artificial intelligence integration.", "jupyter.lab.setting-icon": "jupyter-ai::chat", "jupyter.lab.setting-icon-label": "Jupyter AI Chat", "jupyter.lab.toolbars": {"Cell": [{"name": "ai:explain-or-codify-cell", "command": "ai:explain-or-codify-cell", "rank": 10}]}, "jupyter.lab.menus": {"context": [{"name": "ai:explain-code-cell", "command": "ai:explain-code-cell", "selector": ".jp-CodeCell", "rank": 500}, {"name": "ai:codify-md-cell", "command": "ai:codify-md-cell", "selector": ".jp-MarkdownCell", "rank": 510}, {"name": "ai:generate-from-notebook-selection", "command": "ai:generate-from-notebook-selection", "selector": ".jp-NotebookPanel", "rank": 520}, {"name": "ai:generate-from-editor-selection", "command": "ai:generate-from-editor-selection", "selector": ".jp-FileEditor", "rank": 520}]}, "additionalProperties": false, "type": "object"}, "settings": {}, "version": "2.7.1"}]